#summary List of items to be done on this project

MetaCompiler:
 * extend BNF parsing for semantic definitions (lambda expressions)
 * generate lambda expressions instead of input
 * grammar transformers for left-recursion and left-factoring
 * add SLR parser
 * reimplement (recursive descent?) BNF parser for BNFGrammars (bootstraping) test
 * consider implementing proper lexer (Aho-Corasick?)
 * add various test languages (ListProcessor, SimpleImperative)

LambdaInterpreter:
 * finish decoupling of parser and printing from tests and from implementation (add mocking support for Calculus facade)
 * refactor beta-reduction and normalization to Visitor
 * implement printing to syntax with de Bruijn indexes using Visitor
 * finish alpha equivalence (add unit tests)
 * implement eta reduction for convenient use of recursion
 * extract the traversal strategy from visitors
 * pay technical debt 